// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package port

import (
	"context"
	"reflect"

	"errors"
	"github.com/port-labs/pulumi-port/sdk/v2/go/port/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Organization secret resource
type OrganizationSecret struct {
	pulumi.CustomResourceState

	// The description of the organization secret
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the organization secret
	SecretName pulumi.StringOutput `pulumi:"secretName"`
	// The value of the organization secret
	SecretValue pulumi.StringOutput `pulumi:"secretValue"`
}

// NewOrganizationSecret registers a new resource with the given unique name, arguments, and options.
func NewOrganizationSecret(ctx *pulumi.Context,
	name string, args *OrganizationSecretArgs, opts ...pulumi.ResourceOption) (*OrganizationSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecretName == nil {
		return nil, errors.New("invalid value for required argument 'SecretName'")
	}
	if args.SecretValue == nil {
		return nil, errors.New("invalid value for required argument 'SecretValue'")
	}
	if args.SecretValue != nil {
		args.SecretValue = pulumi.ToSecret(args.SecretValue).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretValue",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationSecret
	err := ctx.RegisterResource("port:index/organizationSecret:OrganizationSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationSecret gets an existing OrganizationSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationSecretState, opts ...pulumi.ResourceOption) (*OrganizationSecret, error) {
	var resource OrganizationSecret
	err := ctx.ReadResource("port:index/organizationSecret:OrganizationSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationSecret resources.
type organizationSecretState struct {
	// The description of the organization secret
	Description *string `pulumi:"description"`
	// The name of the organization secret
	SecretName *string `pulumi:"secretName"`
	// The value of the organization secret
	SecretValue *string `pulumi:"secretValue"`
}

type OrganizationSecretState struct {
	// The description of the organization secret
	Description pulumi.StringPtrInput
	// The name of the organization secret
	SecretName pulumi.StringPtrInput
	// The value of the organization secret
	SecretValue pulumi.StringPtrInput
}

func (OrganizationSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSecretState)(nil)).Elem()
}

type organizationSecretArgs struct {
	// The description of the organization secret
	Description *string `pulumi:"description"`
	// The name of the organization secret
	SecretName string `pulumi:"secretName"`
	// The value of the organization secret
	SecretValue string `pulumi:"secretValue"`
}

// The set of arguments for constructing a OrganizationSecret resource.
type OrganizationSecretArgs struct {
	// The description of the organization secret
	Description pulumi.StringPtrInput
	// The name of the organization secret
	SecretName pulumi.StringInput
	// The value of the organization secret
	SecretValue pulumi.StringInput
}

func (OrganizationSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSecretArgs)(nil)).Elem()
}

type OrganizationSecretInput interface {
	pulumi.Input

	ToOrganizationSecretOutput() OrganizationSecretOutput
	ToOrganizationSecretOutputWithContext(ctx context.Context) OrganizationSecretOutput
}

func (*OrganizationSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSecret)(nil)).Elem()
}

func (i *OrganizationSecret) ToOrganizationSecretOutput() OrganizationSecretOutput {
	return i.ToOrganizationSecretOutputWithContext(context.Background())
}

func (i *OrganizationSecret) ToOrganizationSecretOutputWithContext(ctx context.Context) OrganizationSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSecretOutput)
}

// OrganizationSecretArrayInput is an input type that accepts OrganizationSecretArray and OrganizationSecretArrayOutput values.
// You can construct a concrete instance of `OrganizationSecretArrayInput` via:
//
//	OrganizationSecretArray{ OrganizationSecretArgs{...} }
type OrganizationSecretArrayInput interface {
	pulumi.Input

	ToOrganizationSecretArrayOutput() OrganizationSecretArrayOutput
	ToOrganizationSecretArrayOutputWithContext(context.Context) OrganizationSecretArrayOutput
}

type OrganizationSecretArray []OrganizationSecretInput

func (OrganizationSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationSecret)(nil)).Elem()
}

func (i OrganizationSecretArray) ToOrganizationSecretArrayOutput() OrganizationSecretArrayOutput {
	return i.ToOrganizationSecretArrayOutputWithContext(context.Background())
}

func (i OrganizationSecretArray) ToOrganizationSecretArrayOutputWithContext(ctx context.Context) OrganizationSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSecretArrayOutput)
}

// OrganizationSecretMapInput is an input type that accepts OrganizationSecretMap and OrganizationSecretMapOutput values.
// You can construct a concrete instance of `OrganizationSecretMapInput` via:
//
//	OrganizationSecretMap{ "key": OrganizationSecretArgs{...} }
type OrganizationSecretMapInput interface {
	pulumi.Input

	ToOrganizationSecretMapOutput() OrganizationSecretMapOutput
	ToOrganizationSecretMapOutputWithContext(context.Context) OrganizationSecretMapOutput
}

type OrganizationSecretMap map[string]OrganizationSecretInput

func (OrganizationSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationSecret)(nil)).Elem()
}

func (i OrganizationSecretMap) ToOrganizationSecretMapOutput() OrganizationSecretMapOutput {
	return i.ToOrganizationSecretMapOutputWithContext(context.Background())
}

func (i OrganizationSecretMap) ToOrganizationSecretMapOutputWithContext(ctx context.Context) OrganizationSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSecretMapOutput)
}

type OrganizationSecretOutput struct{ *pulumi.OutputState }

func (OrganizationSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSecret)(nil)).Elem()
}

func (o OrganizationSecretOutput) ToOrganizationSecretOutput() OrganizationSecretOutput {
	return o
}

func (o OrganizationSecretOutput) ToOrganizationSecretOutputWithContext(ctx context.Context) OrganizationSecretOutput {
	return o
}

// The description of the organization secret
func (o OrganizationSecretOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationSecret) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the organization secret
func (o OrganizationSecretOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationSecret) pulumi.StringOutput { return v.SecretName }).(pulumi.StringOutput)
}

// The value of the organization secret
func (o OrganizationSecretOutput) SecretValue() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationSecret) pulumi.StringOutput { return v.SecretValue }).(pulumi.StringOutput)
}

type OrganizationSecretArrayOutput struct{ *pulumi.OutputState }

func (OrganizationSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationSecret)(nil)).Elem()
}

func (o OrganizationSecretArrayOutput) ToOrganizationSecretArrayOutput() OrganizationSecretArrayOutput {
	return o
}

func (o OrganizationSecretArrayOutput) ToOrganizationSecretArrayOutputWithContext(ctx context.Context) OrganizationSecretArrayOutput {
	return o
}

func (o OrganizationSecretArrayOutput) Index(i pulumi.IntInput) OrganizationSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationSecret {
		return vs[0].([]*OrganizationSecret)[vs[1].(int)]
	}).(OrganizationSecretOutput)
}

type OrganizationSecretMapOutput struct{ *pulumi.OutputState }

func (OrganizationSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationSecret)(nil)).Elem()
}

func (o OrganizationSecretMapOutput) ToOrganizationSecretMapOutput() OrganizationSecretMapOutput {
	return o
}

func (o OrganizationSecretMapOutput) ToOrganizationSecretMapOutputWithContext(ctx context.Context) OrganizationSecretMapOutput {
	return o
}

func (o OrganizationSecretMapOutput) MapIndex(k pulumi.StringInput) OrganizationSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationSecret {
		return vs[0].(map[string]*OrganizationSecret)[vs[1].(string)]
	}).(OrganizationSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecretInput)(nil)).Elem(), &OrganizationSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecretArrayInput)(nil)).Elem(), OrganizationSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecretMapInput)(nil)).Elem(), OrganizationSecretMap{})
	pulumi.RegisterOutputType(OrganizationSecretOutput{})
	pulumi.RegisterOutputType(OrganizationSecretArrayOutput{})
	pulumi.RegisterOutputType(OrganizationSecretMapOutput{})
}
