// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package port

import (
	"context"
	"reflect"

	"github.com/port-labs/pulumi-port/sdk/v2/go/port/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The search data source allows you to search for entities in Port.
//
// See the [Port documentation](https://docs.getport.io/search-and-query/) for more information about the search capabilities in Port.
//
// ## Example Usage
func GetSearch(ctx *pulumi.Context, args *GetSearchArgs, opts ...pulumi.InvokeOption) (*GetSearchResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSearchResult
	err := ctx.Invoke("port:index/getSearch:getSearch", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSearch.
type GetSearchArgs struct {
	// Attach title to relation
	AttachTitleToRelation *bool `pulumi:"attachTitleToRelation"`
	// Exclude calculated properties
	ExcludeCalculatedProperties *bool `pulumi:"excludeCalculatedProperties"`
	// Properties to exclude from the results
	Excludes []string `pulumi:"excludes"`
	// Properties to include in the results
	Includes []string `pulumi:"includes"`
	// The search query
	Query string `pulumi:"query"`
}

// A collection of values returned by getSearch.
type GetSearchResult struct {
	// Attach title to relation
	AttachTitleToRelation *bool `pulumi:"attachTitleToRelation"`
	// A list of entities matching the search query
	Entities []GetSearchEntity `pulumi:"entities"`
	// Exclude calculated properties
	ExcludeCalculatedProperties *bool `pulumi:"excludeCalculatedProperties"`
	// Properties to exclude from the results
	Excludes []string `pulumi:"excludes"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// Properties to include in the results
	Includes []string `pulumi:"includes"`
	// The matching blueprints for the search query
	MatchingBlueprints []string `pulumi:"matchingBlueprints"`
	// The search query
	Query string `pulumi:"query"`
}

func GetSearchOutput(ctx *pulumi.Context, args GetSearchOutputArgs, opts ...pulumi.InvokeOption) GetSearchResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSearchResultOutput, error) {
			args := v.(GetSearchArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("port:index/getSearch:getSearch", args, GetSearchResultOutput{}, options).(GetSearchResultOutput), nil
		}).(GetSearchResultOutput)
}

// A collection of arguments for invoking getSearch.
type GetSearchOutputArgs struct {
	// Attach title to relation
	AttachTitleToRelation pulumi.BoolPtrInput `pulumi:"attachTitleToRelation"`
	// Exclude calculated properties
	ExcludeCalculatedProperties pulumi.BoolPtrInput `pulumi:"excludeCalculatedProperties"`
	// Properties to exclude from the results
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// Properties to include in the results
	Includes pulumi.StringArrayInput `pulumi:"includes"`
	// The search query
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSearchOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchArgs)(nil)).Elem()
}

// A collection of values returned by getSearch.
type GetSearchResultOutput struct{ *pulumi.OutputState }

func (GetSearchResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchResult)(nil)).Elem()
}

func (o GetSearchResultOutput) ToGetSearchResultOutput() GetSearchResultOutput {
	return o
}

func (o GetSearchResultOutput) ToGetSearchResultOutputWithContext(ctx context.Context) GetSearchResultOutput {
	return o
}

// Attach title to relation
func (o GetSearchResultOutput) AttachTitleToRelation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSearchResult) *bool { return v.AttachTitleToRelation }).(pulumi.BoolPtrOutput)
}

// A list of entities matching the search query
func (o GetSearchResultOutput) Entities() GetSearchEntityArrayOutput {
	return o.ApplyT(func(v GetSearchResult) []GetSearchEntity { return v.Entities }).(GetSearchEntityArrayOutput)
}

// Exclude calculated properties
func (o GetSearchResultOutput) ExcludeCalculatedProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSearchResult) *bool { return v.ExcludeCalculatedProperties }).(pulumi.BoolPtrOutput)
}

// Properties to exclude from the results
func (o GetSearchResultOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSearchResult) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// The ID of this resource.
func (o GetSearchResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchResult) string { return v.Id }).(pulumi.StringOutput)
}

// Properties to include in the results
func (o GetSearchResultOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSearchResult) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

// The matching blueprints for the search query
func (o GetSearchResultOutput) MatchingBlueprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSearchResult) []string { return v.MatchingBlueprints }).(pulumi.StringArrayOutput)
}

// The search query
func (o GetSearchResultOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchResult) string { return v.Query }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSearchResultOutput{})
}
