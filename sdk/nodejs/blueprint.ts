// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Blueprint extends pulumi.CustomResource {
    /**
     * Get an existing Blueprint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BlueprintState, opts?: pulumi.CustomResourceOptions): Blueprint {
        return new Blueprint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'port:index/blueprint:Blueprint';

    /**
     * Returns true if the given object is an instance of Blueprint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Blueprint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Blueprint.__pulumiType;
    }

    /**
     * The calculation properties of the blueprint
     */
    public readonly calculationProperties!: pulumi.Output<{[key: string]: outputs.BlueprintCalculationProperties} | undefined>;
    /**
     * This flag is only relevant for blueprint creation, by default if not set, a catalog page will be created for the blueprint
     */
    public readonly createCatalogPage!: pulumi.Output<boolean>;
    /**
     * The creation date of the blueprint
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The creator of the blueprint
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The description of the blueprint
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly forceDeleteEntities!: pulumi.Output<boolean>;
    /**
     * The icon of the blueprint
     */
    public readonly icon!: pulumi.Output<string | undefined>;
    /**
     * The identifier of the blueprint
     */
    public readonly identifier!: pulumi.Output<string>;
    /**
     * The changelog destination of the blueprint
     */
    public readonly kafkaChangelogDestination!: pulumi.Output<outputs.BlueprintKafkaChangelogDestination | undefined>;
    /**
     * The mirror properties of the blueprint
     */
    public readonly mirrorProperties!: pulumi.Output<{[key: string]: outputs.BlueprintMirrorProperties} | undefined>;
    /**
     * Optional ownership field for Blueprint. 'type' can be Inherited or Direct. If 'Inherited', then 'path' is required and must be a valid relation identifiers path.
     */
    public readonly ownership!: pulumi.Output<outputs.BlueprintOwnership | undefined>;
    /**
     * The properties of the blueprint
     */
    public readonly properties!: pulumi.Output<outputs.BlueprintProperties | undefined>;
    /**
     * The relations of the blueprint
     */
    public readonly relations!: pulumi.Output<{[key: string]: outputs.BlueprintRelations} | undefined>;
    /**
     * The team inheritance of the blueprint
     *
     * @deprecated After the Users and Teams migration, `teamInheritance` will be ignored in favor of `ownership`
     */
    public readonly teamInheritance!: pulumi.Output<outputs.BlueprintTeamInheritance | undefined>;
    /**
     * The display name of the blueprint
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * The last update date of the blueprint
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The last updater of the blueprint
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;
    /**
     * The webhook changelog destination of the blueprint
     */
    public readonly webhookChangelogDestination!: pulumi.Output<outputs.BlueprintWebhookChangelogDestination | undefined>;

    /**
     * Create a Blueprint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlueprintArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BlueprintArgs | BlueprintState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BlueprintState | undefined;
            resourceInputs["calculationProperties"] = state ? state.calculationProperties : undefined;
            resourceInputs["createCatalogPage"] = state ? state.createCatalogPage : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["forceDeleteEntities"] = state ? state.forceDeleteEntities : undefined;
            resourceInputs["icon"] = state ? state.icon : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["kafkaChangelogDestination"] = state ? state.kafkaChangelogDestination : undefined;
            resourceInputs["mirrorProperties"] = state ? state.mirrorProperties : undefined;
            resourceInputs["ownership"] = state ? state.ownership : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["relations"] = state ? state.relations : undefined;
            resourceInputs["teamInheritance"] = state ? state.teamInheritance : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["webhookChangelogDestination"] = state ? state.webhookChangelogDestination : undefined;
        } else {
            const args = argsOrState as BlueprintArgs | undefined;
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["calculationProperties"] = args ? args.calculationProperties : undefined;
            resourceInputs["createCatalogPage"] = args ? args.createCatalogPage : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["forceDeleteEntities"] = args ? args.forceDeleteEntities : undefined;
            resourceInputs["icon"] = args ? args.icon : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["kafkaChangelogDestination"] = args ? args.kafkaChangelogDestination : undefined;
            resourceInputs["mirrorProperties"] = args ? args.mirrorProperties : undefined;
            resourceInputs["ownership"] = args ? args.ownership : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["relations"] = args ? args.relations : undefined;
            resourceInputs["teamInheritance"] = args ? args.teamInheritance : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["webhookChangelogDestination"] = args ? args.webhookChangelogDestination : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Blueprint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Blueprint resources.
 */
export interface BlueprintState {
    /**
     * The calculation properties of the blueprint
     */
    calculationProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.BlueprintCalculationProperties>}>;
    /**
     * This flag is only relevant for blueprint creation, by default if not set, a catalog page will be created for the blueprint
     */
    createCatalogPage?: pulumi.Input<boolean>;
    /**
     * The creation date of the blueprint
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The creator of the blueprint
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The description of the blueprint
     */
    description?: pulumi.Input<string>;
    forceDeleteEntities?: pulumi.Input<boolean>;
    /**
     * The icon of the blueprint
     */
    icon?: pulumi.Input<string>;
    /**
     * The identifier of the blueprint
     */
    identifier?: pulumi.Input<string>;
    /**
     * The changelog destination of the blueprint
     */
    kafkaChangelogDestination?: pulumi.Input<inputs.BlueprintKafkaChangelogDestination>;
    /**
     * The mirror properties of the blueprint
     */
    mirrorProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.BlueprintMirrorProperties>}>;
    /**
     * Optional ownership field for Blueprint. 'type' can be Inherited or Direct. If 'Inherited', then 'path' is required and must be a valid relation identifiers path.
     */
    ownership?: pulumi.Input<inputs.BlueprintOwnership>;
    /**
     * The properties of the blueprint
     */
    properties?: pulumi.Input<inputs.BlueprintProperties>;
    /**
     * The relations of the blueprint
     */
    relations?: pulumi.Input<{[key: string]: pulumi.Input<inputs.BlueprintRelations>}>;
    /**
     * The team inheritance of the blueprint
     *
     * @deprecated After the Users and Teams migration, `teamInheritance` will be ignored in favor of `ownership`
     */
    teamInheritance?: pulumi.Input<inputs.BlueprintTeamInheritance>;
    /**
     * The display name of the blueprint
     */
    title?: pulumi.Input<string>;
    /**
     * The last update date of the blueprint
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The last updater of the blueprint
     */
    updatedBy?: pulumi.Input<string>;
    /**
     * The webhook changelog destination of the blueprint
     */
    webhookChangelogDestination?: pulumi.Input<inputs.BlueprintWebhookChangelogDestination>;
}

/**
 * The set of arguments for constructing a Blueprint resource.
 */
export interface BlueprintArgs {
    /**
     * The calculation properties of the blueprint
     */
    calculationProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.BlueprintCalculationProperties>}>;
    /**
     * This flag is only relevant for blueprint creation, by default if not set, a catalog page will be created for the blueprint
     */
    createCatalogPage?: pulumi.Input<boolean>;
    /**
     * The description of the blueprint
     */
    description?: pulumi.Input<string>;
    forceDeleteEntities?: pulumi.Input<boolean>;
    /**
     * The icon of the blueprint
     */
    icon?: pulumi.Input<string>;
    /**
     * The identifier of the blueprint
     */
    identifier: pulumi.Input<string>;
    /**
     * The changelog destination of the blueprint
     */
    kafkaChangelogDestination?: pulumi.Input<inputs.BlueprintKafkaChangelogDestination>;
    /**
     * The mirror properties of the blueprint
     */
    mirrorProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.BlueprintMirrorProperties>}>;
    /**
     * Optional ownership field for Blueprint. 'type' can be Inherited or Direct. If 'Inherited', then 'path' is required and must be a valid relation identifiers path.
     */
    ownership?: pulumi.Input<inputs.BlueprintOwnership>;
    /**
     * The properties of the blueprint
     */
    properties?: pulumi.Input<inputs.BlueprintProperties>;
    /**
     * The relations of the blueprint
     */
    relations?: pulumi.Input<{[key: string]: pulumi.Input<inputs.BlueprintRelations>}>;
    /**
     * The team inheritance of the blueprint
     *
     * @deprecated After the Users and Teams migration, `teamInheritance` will be ignored in favor of `ownership`
     */
    teamInheritance?: pulumi.Input<inputs.BlueprintTeamInheritance>;
    /**
     * The display name of the blueprint
     */
    title: pulumi.Input<string>;
    /**
     * The webhook changelog destination of the blueprint
     */
    webhookChangelogDestination?: pulumi.Input<inputs.BlueprintWebhookChangelogDestination>;
}
