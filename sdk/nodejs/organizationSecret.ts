// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Organization secret resource
 */
export class OrganizationSecret extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationSecret resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationSecretState, opts?: pulumi.CustomResourceOptions): OrganizationSecret {
        return new OrganizationSecret(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'port:index/organizationSecret:OrganizationSecret';

    /**
     * Returns true if the given object is an instance of OrganizationSecret.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationSecret {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationSecret.__pulumiType;
    }

    /**
     * The description of the organization secret
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the organization secret
     */
    public readonly secretName!: pulumi.Output<string>;
    /**
     * The value of the organization secret
     */
    public readonly secretValue!: pulumi.Output<string>;

    /**
     * Create a OrganizationSecret resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationSecretArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationSecretArgs | OrganizationSecretState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationSecretState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["secretName"] = state ? state.secretName : undefined;
            resourceInputs["secretValue"] = state ? state.secretValue : undefined;
        } else {
            const args = argsOrState as OrganizationSecretArgs | undefined;
            if ((!args || args.secretName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretName'");
            }
            if ((!args || args.secretValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretValue'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["secretName"] = args ? args.secretName : undefined;
            resourceInputs["secretValue"] = args?.secretValue ? pulumi.secret(args.secretValue) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secretValue"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OrganizationSecret.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationSecret resources.
 */
export interface OrganizationSecretState {
    /**
     * The description of the organization secret
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the organization secret
     */
    secretName?: pulumi.Input<string>;
    /**
     * The value of the organization secret
     */
    secretValue?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationSecret resource.
 */
export interface OrganizationSecretArgs {
    /**
     * The description of the organization secret
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the organization secret
     */
    secretName: pulumi.Input<string>;
    /**
     * The value of the organization secret
     */
    secretValue: pulumi.Input<string>;
}
