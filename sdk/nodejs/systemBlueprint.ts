// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Port System Blueprint Resource. This resource is used to extend system blueprints with additional properties and relations.
 */
export class SystemBlueprint extends pulumi.CustomResource {
    /**
     * Get an existing SystemBlueprint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemBlueprintState, opts?: pulumi.CustomResourceOptions): SystemBlueprint {
        return new SystemBlueprint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'port:index/systemBlueprint:SystemBlueprint';

    /**
     * Returns true if the given object is an instance of SystemBlueprint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemBlueprint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemBlueprint.__pulumiType;
    }

    /**
     * The calculation properties of the blueprint
     */
    public readonly calculationProperties!: pulumi.Output<{[key: string]: outputs.SystemBlueprintCalculationProperties} | undefined>;
    /**
     * Identifier of the system blueprint.
     */
    public readonly identifier!: pulumi.Output<string>;
    /**
     * The mirror properties of the blueprint
     */
    public readonly mirrorProperties!: pulumi.Output<{[key: string]: outputs.SystemBlueprintMirrorProperties} | undefined>;
    /**
     * The properties of the blueprint
     */
    public readonly properties!: pulumi.Output<outputs.SystemBlueprintProperties | undefined>;
    /**
     * The relations of the blueprint
     */
    public readonly relations!: pulumi.Output<{[key: string]: outputs.SystemBlueprintRelations} | undefined>;

    /**
     * Create a SystemBlueprint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemBlueprintArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemBlueprintArgs | SystemBlueprintState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemBlueprintState | undefined;
            resourceInputs["calculationProperties"] = state ? state.calculationProperties : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["mirrorProperties"] = state ? state.mirrorProperties : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["relations"] = state ? state.relations : undefined;
        } else {
            const args = argsOrState as SystemBlueprintArgs | undefined;
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            resourceInputs["calculationProperties"] = args ? args.calculationProperties : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["mirrorProperties"] = args ? args.mirrorProperties : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["relations"] = args ? args.relations : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemBlueprint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemBlueprint resources.
 */
export interface SystemBlueprintState {
    /**
     * The calculation properties of the blueprint
     */
    calculationProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SystemBlueprintCalculationProperties>}>;
    /**
     * Identifier of the system blueprint.
     */
    identifier?: pulumi.Input<string>;
    /**
     * The mirror properties of the blueprint
     */
    mirrorProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SystemBlueprintMirrorProperties>}>;
    /**
     * The properties of the blueprint
     */
    properties?: pulumi.Input<inputs.SystemBlueprintProperties>;
    /**
     * The relations of the blueprint
     */
    relations?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SystemBlueprintRelations>}>;
}

/**
 * The set of arguments for constructing a SystemBlueprint resource.
 */
export interface SystemBlueprintArgs {
    /**
     * The calculation properties of the blueprint
     */
    calculationProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SystemBlueprintCalculationProperties>}>;
    /**
     * Identifier of the system blueprint.
     */
    identifier: pulumi.Input<string>;
    /**
     * The mirror properties of the blueprint
     */
    mirrorProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SystemBlueprintMirrorProperties>}>;
    /**
     * The properties of the blueprint
     */
    properties?: pulumi.Input<inputs.SystemBlueprintProperties>;
    /**
     * The relations of the blueprint
     */
    relations?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SystemBlueprintRelations>}>;
}
